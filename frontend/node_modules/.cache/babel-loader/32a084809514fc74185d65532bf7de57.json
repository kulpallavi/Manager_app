{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { subListReducer, subDetailsReducer } from './reducers/subReducers';\nimport { userLoginReducer } from './reducers/userReducer';\nconst reducer = combineReducers({\n  subList: subListReducer,\n  subDetails: subDetailsReducer,\n  userLogin: userLoginReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/Project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","subListReducer","subDetailsReducer","userLoginReducer","reducer","subList","subDetails","userLogin","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,cAAR,EAAuBC,iBAAvB,QAA+C,wBAA/C;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,OAAO,EAAGJ,cADkB;AAE5BK,EAAAA,UAAU,EAACJ,iBAFiB;AAG5BK,EAAAA,SAAS,EAACJ;AAHkB,CAAD,CAA/B;AAMA,MAAMK,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAIA,MAAMG,YAAY,GAAG,EAArB;AAIA,MAAMC,UAAU,GAAG,CAACf,KAAD,CAAnB;AAEA,MAAMgB,KAAK,GAAGnB,WAAW,CAACQ,OAAD,EAAUS,YAAV,EACrBb,mBAAmB,CAACF,eAAe,CAAC,GAAGgB,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {subListReducer,subDetailsReducer} from './reducers/subReducers'\r\nimport { userLoginReducer } from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n    subList : subListReducer,\r\n    subDetails:subDetailsReducer,\r\n    userLogin:userLoginReducer\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst initialState = {\r\n    \r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n\r\n"]},"metadata":{},"sourceType":"module"}
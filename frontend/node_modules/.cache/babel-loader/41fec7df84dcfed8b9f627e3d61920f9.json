{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project - Copy\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'; //import { PayPalButton } from 'react-paypal-button-v2'\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserSubscription } from '../actions/orderActions'; // import { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\n\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  console.log(match.params.id); // const [sdkReady, setSdkReady] = useState(false)\n\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    error,\n    loading\n  } = orderDetails;\n  console.log(order); // const orderPay = useSelector(state => state.orderPay)\n  // const { loading: loadingPay, success: successPay } = orderPay\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n\n  if (!loading && !error) {\n    order.price = order.price;\n  } // const addPayPalScript = () => {\n  //     const script = document.createElement('script')\n  //     script.type = 'text/javascript'\n  //     script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\n  //     script.async = true\n  //     script.onload = () => {\n  //         setSdkReady(true)\n  //     }\n  //     document.body.appendChild(script)\n  // }\n\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    if (!order || order._id !== Number(orderId)) {\n      // dispatch({ type: ORDER_PAY_RESET })\n      // dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getUserSubscription(orderId)); // } else if (!order) {\n      //     if (!window.paypal) {\n      //         addPayPalScript()\n      //     } else {\n      //         setSdkReady(true)\n      //     }\n    }\n  }, [dispatch, order, orderId]); //successPay, successDeliver])\n  // const successPaymentHandler = (paymentResult) => {\n  //     dispatch(payOrder(orderId, paymentResult))\n  // }\n  // const deliverHandler = () => {\n  //     dispatch(deliverOrder(order))\n  // }\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Order: \", order._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 41\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 37\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 41\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"warning\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 1,\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  src: order.image,\n                  alt: order.name,\n                  fluid: true,\n                  rounded: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/subscriptions/${order.plan}`,\n                  children: order.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: order.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 17\n  }, this);\n}\n\n_s(OrderScreen, \"j0upIy1tgvTy97DBuM3WrJeOBlM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["D:/Project - Copy/frontend/src/screens/OrderScreen.js"],"names":["React","useState","useEffect","Button","Row","Col","ListGroup","Image","Card","Link","useDispatch","useSelector","Message","Loader","getUserSubscription","ORDER_PAY_RESET","OrderScreen","match","history","orderId","params","id","dispatch","console","log","orderDetails","state","order","error","loading","userLogin","userInfo","price","push","_id","Number","paymentMethod","isPaid","paidAt","image","name","plan"],"mappings":"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","sourcesContent":[" import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//import { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserSubscription } from '../actions/orderActions'\r\n// import { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n    console.log(match.params.id)\r\n\r\n    // const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n    console.log(order)\r\n    // const orderPay = useSelector(state => state.orderPay)\r\n    // const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading && !error) {\r\n        order.price = order.price\r\n    }\r\n\r\n\r\n    // const addPayPalScript = () => {\r\n    //     const script = document.createElement('script')\r\n    //     script.type = 'text/javascript'\r\n    //     script.src = 'https://www.paypal.com/sdk/js?client-id=AeDXja18CkwFUkL-HQPySbzZsiTrN52cG13mf9Yz7KiV2vNnGfTDP0wDEN9sGlhZHrbb_USawcJzVDgn'\r\n    //     script.async = true\r\n    //     script.onload = () => {\r\n    //         setSdkReady(true)\r\n    //     }\r\n    //     document.body.appendChild(script)\r\n    // }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order ||  order._id !== Number(orderId)) {\r\n            // dispatch({ type: ORDER_PAY_RESET })\r\n            // dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n            dispatch(getUserSubscription(orderId))\r\n        // } else if (!order) {\r\n        //     if (!window.paypal) {\r\n        //         addPayPalScript()\r\n        //     } else {\r\n        //         setSdkReady(true)\r\n        //     }\r\n        }\r\n    }, [dispatch, order, orderId]) //successPay, successDeliver])\r\n\r\n\r\n    // const successPaymentHandler = (paymentResult) => {\r\n    //     dispatch(payOrder(orderId, paymentResult))\r\n    // }\r\n\r\n    // const deliverHandler = () => {\r\n    //     dispatch(deliverOrder(order))\r\n    // }\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n                <div>\r\n                    <Row>\r\n                    <h1>Order: {order._id}</h1>\r\n                    <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method: </strong>\r\n                                        {order.paymentMethod}\r\n                                    </p>\r\n                                    {order.isPaid ? (\r\n                                        <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                    ) : (\r\n                                            <Message variant='warning'>Not Paid</Message>\r\n                                        )}\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                      \r\n                                           \r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={order.image} alt={order.name} fluid rounded />\r\n                                            </Col>\r\n\r\n                                            <Col>\r\n                                                <Link to={`/subscriptions/${order.plan}`}>{order.name}</Link>\r\n                                            </Col>\r\n\r\n                                            <Col md={4}>\r\n                                                {order.price}\r\n                                            </Col>\r\n                                        </Row>\r\n                                           \r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen"]},"metadata":{},"sourceType":"module"}
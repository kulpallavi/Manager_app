{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { subListReducer, subDetailsReducer } from './reducers/subReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducer';\nimport { orderDetailsReducer, orderCreateReducer, selectedSubReducer, orderPayReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  subList: subListReducer,\n  subDetails: subDetailsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  selectedSub: selectedSubReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst ItemFromStorage = localStorage.getItem('subItem') ? JSON.parse(localStorage.getItem('subItem')) : [];\nconst initialState = {\n  selectedSub: {\n    subItem: ItemFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/Project - Copy/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","subListReducer","subDetailsReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderDetailsReducer","orderCreateReducer","selectedSubReducer","orderPayReducer","reducer","subList","subDetails","userLogin","userRegister","userDetails","userUpdateProfile","selectedSub","orderCreate","orderDetails","orderPay","userInfoFromStorage","localStorage","getItem","JSON","parse","ItemFromStorage","initialState","subItem","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,cAAR,EAAuBC,iBAAvB,QAA+C,wBAA/C;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,EAA8CC,kBAA9C,EAAiEC,wBAAjE,QAAiG,wBAAjG;AACA,SACIC,mBADJ,EAEIC,kBAFJ,EAGIC,kBAHJ,EAIIC,eAJJ,QAKO,0BALP;AAOA,MAAMC,OAAO,GAAGd,eAAe,CAAC;AAC5Be,EAAAA,OAAO,EAAGX,cADkB;AAE5BY,EAAAA,UAAU,EAACX,iBAFiB;AAG5BY,EAAAA,SAAS,EAACX,gBAHkB;AAI5BY,EAAAA,YAAY,EAACX,mBAJe;AAK5BY,EAAAA,WAAW,EAACX,kBALgB;AAM5BY,EAAAA,iBAAiB,EAACX,wBANU;AAO5BY,EAAAA,WAAW,EAAET,kBAPe;AAQ5BU,EAAAA,WAAW,EAAEX,kBARe;AAS5BY,EAAAA,YAAY,EAAEb,mBATc;AAU5Bc,EAAAA,QAAQ,EAACX;AAVmB,CAAD,CAA/B;AAaA,MAAMY,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAGA,MAAMG,eAAe,GAAGJ,YAAY,CAACC,OAAb,CAAqB,SAArB,IACpBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CADoB,GAC0B,EADlD;AAGA,MAAMI,YAAY,GAAG;AACjBV,EAAAA,WAAW,EAAC;AACRW,IAAAA,OAAO,EAAEF;AADD,GADK;AAGjBb,EAAAA,SAAS,EAAE;AAAEgB,IAAAA,QAAQ,EAAER;AAAZ;AAHM,CAArB;AAMA,MAAMS,UAAU,GAAG,CAAChC,KAAD,CAAnB;AAEA,MAAMiC,KAAK,GAAGpC,WAAW,CAACe,OAAD,EAAUiB,YAAV,EACrB5B,mBAAmB,CAACF,eAAe,CAAC,GAAGiC,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {subListReducer,subDetailsReducer} from './reducers/subReducers'\r\nimport { userLoginReducer,userRegisterReducer,userDetailsReducer,userUpdateProfileReducer } from './reducers/userReducer'\r\nimport { \r\n    orderDetailsReducer,\r\n    orderCreateReducer,\r\n    selectedSubReducer,\r\n    orderPayReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    subList : subListReducer,\r\n    subDetails:subDetailsReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer,\r\n    userDetails:userDetailsReducer,\r\n    userUpdateProfile:userUpdateProfileReducer,\r\n    selectedSub: selectedSubReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay:orderPayReducer,\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst ItemFromStorage = localStorage.getItem('subItem') ?\r\n    JSON.parse(localStorage.getItem('subItem')) : []\r\n\r\nconst initialState = {\r\n    selectedSub:{ \r\n        subItem: ItemFromStorage},\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n\r\n"]},"metadata":{},"sourceType":"module"}
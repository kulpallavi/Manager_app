{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\frontend\\\\src\\\\screens\\\\PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { ListGroup, Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport Payment from '../components/Payment';\nimport { listSubscriptionsDetails } from '../actions/subActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n  const subDetails = useSelector(state => state.subDetails);\n  const {\n    subscription\n  } = subDetails;\n  useEffect(() => {\n    dispatch(listSubscriptionsDetails(match.params.id));\n  }, [dispatch, match]);\n  console.log(subscription);\n\n  const submitHandler = e => {\n    e.preventDefault(); // dispatch(savePaymentMethod(paymentMethod))\n\n    console.log(paymentMethod);\n    history.push('/placeorder');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"PayPal   or  Credit Card\",\n            id: \"paypal\",\n            name: \"paymentMethod\",\n            checked: true,\n            onChange: e => setPaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \" days\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"From : 12/20/30 - 22/20/30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: \"Price: Rs.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PaymentScreen, \"kptGDBYx2wNCv6jPOynOSg4KY+4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["D:/Project/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","useEffect","ListGroup","Form","Button","Col","useDispatch","useSelector","FormContainer","Payment","listSubscriptionsDetails","PaymentScreen","match","history","dispatch","paymentMethod","setPaymentMethod","subDetails","state","subscription","params","id","console","log","submitHandler","e","preventDefault","push","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { ListGroup,Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Payment from '../components/Payment'\r\nimport {listSubscriptionsDetails} from '../actions/subActions'\r\n\r\nconst PaymentScreen = ({match,history}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n    const subDetails = useSelector(state => state.subDetails)\r\n    const {subscription} = subDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listSubscriptionsDetails(match.params.id))\r\n\r\n    }, [dispatch,match])\r\n\r\n    console.log(subscription)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // dispatch(savePaymentMethod(paymentMethod))\r\n        console.log(paymentMethod)\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                        <Col>\r\n                            <Form.Check\r\n                                type='radio'\r\n                                label='PayPal   or  Credit Card'\r\n                                id='paypal'\r\n                                name='paymentMethod'\r\n                                checked\r\n                                onChange={(e) => setPaymentMethod(e.target.value)}\r\n                            >\r\n                            </Form.Check>\r\n                        </Col>\r\n\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3></h3>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <h3> days</h3>\r\n                                <h2>From : 12/20/30 - 22/20/30</h2>\r\n                            </ListGroup.Item>\r\n                            \r\n                            <ListGroup.Item>\r\n                                Price: Rs.\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                    </Col>\r\n\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n\r\n                \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { subListReducer, subDetailsReducer } from './reducers/subReducers';\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducer';\nconst reducer = combineReducers({\n  subList: subListReducer,\n  subDetails: subDetailsReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/Project/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","subListReducer","subDetailsReducer","userLoginReducer","userRegisterReducer","reducer","subList","subDetails","userLogin","userRegister","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAAQC,cAAR,EAAuBC,iBAAvB,QAA+C,wBAA/C;AACA,SAASC,gBAAT,EAA0BC,mBAA1B,QAAqD,wBAArD;AAEA,MAAMC,OAAO,GAAGR,eAAe,CAAC;AAC5BS,EAAAA,OAAO,EAAGL,cADkB;AAE5BM,EAAAA,UAAU,EAACL,iBAFiB;AAG5BM,EAAAA,SAAS,EAACL,gBAHkB;AAI5BM,EAAAA,YAAY,EAACL;AAJe,CAAD,CAA/B;AAOA,MAAMM,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,IACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,GACuB,IADnD;AAIA,MAAMG,YAAY,GAAG;AACjBP,EAAAA,SAAS,EAAE;AAAEQ,IAAAA,QAAQ,EAAEN;AAAZ;AADM,CAArB;AAIA,MAAMO,UAAU,GAAG,CAAClB,KAAD,CAAnB;AAEA,MAAMmB,KAAK,GAAGtB,WAAW,CAACS,OAAD,EAAUU,YAAV,EACrBf,mBAAmB,CAACF,eAAe,CAAC,GAAGmB,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {subListReducer,subDetailsReducer} from './reducers/subReducers'\r\nimport { userLoginReducer,userRegisterReducer } from './reducers/userReducer'\r\n\r\nconst reducer = combineReducers({\r\n    subList : subListReducer,\r\n    subDetails:subDetailsReducer,\r\n    userLogin:userLoginReducer,\r\n    userRegister:userRegisterReducer\r\n})\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\r\n    JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst initialState = {\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project - Copy\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserSubscription, payOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OrderScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const orderId = match.params.id;\n  const dispatch = useDispatch();\n  console.log(match.params.id);\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    error,\n    loading\n  } = orderDetails;\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay,\n    error: errorPay\n  } = orderPay;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n\n  if (!loading && !error) {\n    order.price = order.price;\n  }\n\n  const addPayPalScript = () => {\n    const script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = 'https://www.paypal.com/sdk/js?client-id=AcUxrVfqbSH36k18pd_sTH2e6Q8CjLepK86iji-I6AXp-EBcqcZfZDiUFvCTal-5ESsDxLsFzT7gPy8p';\n    script.async = true;\n\n    script.onload = () => {\n      setSdkReady(true);\n    };\n\n    document.body.appendChild(script);\n  };\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    if (!order || successPay || order._id !== Number(orderId)) {\n      dispatch(getUserSubscription(orderId));\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n    } else if (!order.isPaid) {\n      PayOrderDummy();\n    }\n  }, [dispatch, order, orderId, successPay]); //     } else if (!order.isPaid) {\n  //         if (!window.paypal) {\n  //             addPayPalScript()\n  //         } else {\n  //             setSdkReady(true)\n  //         }\n  //     }\n  // }, [dispatch, order, orderId, successPay])\n  // const successPaymentHandler = (paymentResult) => {\n  //     dispatch(payOrder(orderId, paymentResult))\n  // }\n\n  const PayOrderDummy = () => {\n    dispatch(payOrder(orderId));\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Order: \", order._id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this), order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 55\n              }, this), \"Membership Details\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"warning\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Congratulations \", /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${order.user.email}`,\n                children: order.user_details\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 45\n              }, this), \" you have become a Member!! \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/subscriptions/${order.plan_name}`,\n                    children: order.plan_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 4,\n                children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: order.price\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              amount: order.price,\n              onSuccess: PayOrderDummy\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 49\n            }, this), userInfo.token]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderScreen, \"yuEX6hqzQvVOTnxgLRMmv/FJE6c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["D:/Project - Copy/frontend/src/screens/OrderScreen.js"],"names":["React","useState","useEffect","Button","Row","Col","ListGroup","Image","Card","Link","useDispatch","useSelector","PayPalButton","Message","Loader","getUserSubscription","payOrder","ORDER_PAY_RESET","OrderScreen","match","history","orderId","params","id","dispatch","console","log","sdkReady","setSdkReady","orderDetails","state","order","error","loading","orderPay","loadingPay","success","successPay","errorPay","userLogin","userInfo","price","addPayPalScript","script","document","createElement","type","src","async","onload","body","appendChild","push","_id","Number","isPaid","PayOrderDummy","paymentMethod","paidAt","user","email","user_details","plan_name","token"],"mappings":"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","sourcesContent":[" import React, { useState, useEffect } from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserSubscription,payOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen({ match, history }) {\r\n    const orderId = match.params.id\r\n    const dispatch = useDispatch()\r\n    console.log(match.params.id)\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay,error:errorPay } = orderPay\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    if (!loading && !error) {\r\n        order.price = order.price\r\n    }\r\n\r\n\r\n    const addPayPalScript = () => {\r\n        const script = document.createElement('script')\r\n        script.type = 'text/javascript'\r\n        script.src = 'https://www.paypal.com/sdk/js?client-id=AcUxrVfqbSH36k18pd_sTH2e6Q8CjLepK86iji-I6AXp-EBcqcZfZDiUFvCTal-5ESsDxLsFzT7gPy8p'\r\n        script.async = true\r\n        script.onload = () => {\r\n            setSdkReady(true)\r\n        }\r\n        document.body.appendChild(script)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n\r\n        if (!order || successPay || order._id !== Number(orderId)) {        \r\n            dispatch(getUserSubscription(orderId))\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n           }else if (!order.isPaid){\r\n            PayOrderDummy()} \r\n        }, [dispatch, order, orderId, successPay])\r\n\r\n\r\n    //     } else if (!order.isPaid) {\r\n    //         if (!window.paypal) {\r\n    //             addPayPalScript()\r\n    //         } else {\r\n    //             setSdkReady(true)\r\n    //         }\r\n    //     }\r\n    // }, [dispatch, order, orderId, successPay])\r\n\r\n\r\n    // const successPaymentHandler = (paymentResult) => {\r\n    //     dispatch(payOrder(orderId, paymentResult))\r\n    // }\r\n\r\n    const PayOrderDummy = () => {\r\n        dispatch(payOrder(orderId))\r\n    }\r\n    \r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n    <div>\r\n        <Row>\r\n        <h1>Order: {order._id}</h1>\r\n        <Col md={8}>\r\n                <ListGroup variant='flush'>\r\n\r\n                    <ListGroup.Item>\r\n                        <h2>Payment Method</h2>\r\n                        <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                        </p>\r\n                        {order.isPaid ? (\r\n                            <Message variant='success'>\r\n                                Paid on {order.paidAt}<br/>\r\n                                Membership Details\r\n                            </Message>\r\n                            \r\n                        ) : (\r\n                                <Message variant='warning'>Not Paid</Message>\r\n                            )}\r\n\r\n                    </ListGroup.Item>\r\n\r\n                    <ListGroup.Item>\r\n                        <h4>Congratulations <a href={`mailto:${order.user.email}`}>\r\n                                {order.user_details}\r\n                            </a> you have become a Member!! </h4>\r\n                    </ListGroup.Item> \r\n\r\n                    <ListGroup.Item>                           \r\n                            <Row>\r\n                                <Col>\r\n                                    <h2>\r\n                                        <Link to={`/subscriptions/${order.plan_name}`}>\r\n                                            {order.plan_name}\r\n                                        </Link>\r\n                                    </h2>\r\n                                </Col>\r\n\r\n                                <Col md={4}>\r\n                                <h2>\r\n                                    {order.price}\r\n                                </h2>\r\n                                </Col>\r\n                            </Row>                               \r\n                    </ListGroup.Item>\r\n\r\n\r\n\r\n                    {/* {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n\r\n                                            {!sdkReady ? (\r\n                                                <Loader />\r\n                                            ) : (\r\n                                                <PayPalButton\r\n                                                    amount={order.price}\r\n                                                    onSuccess={successPaymentHandler}\r\n                                                />\r\n                                            )} \r\n                                        </ListGroup.Item>\r\n                                    )} */}\r\n\r\n\r\n\r\n\r\n                                    {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                                <Button\r\n                                                    amount={order.price}\r\n                                                    onSuccess={PayOrderDummy}\r\n                                                />\r\n                                            {userInfo.token}\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                </ListGroup>\r\n\r\n            </Col>\r\n        </Row>\r\n        \r\n    </div>\r\n            )\r\n}\r\n\r\nexport default OrderScreen"]},"metadata":{},"sourceType":"module"}
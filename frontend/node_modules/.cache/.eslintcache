[{"D:\\Project\\frontend\\src\\index.js":"1","D:\\Project\\frontend\\src\\reportWebVitals.js":"2","D:\\Project\\frontend\\src\\App.js":"3","D:\\Project\\frontend\\src\\components\\Head.js":"4","D:\\Project\\frontend\\src\\screens\\Home.js":"5","D:\\Project\\frontend\\src\\subscriptions.js":"6","D:\\Project\\frontend\\src\\components\\Subscription.js":"7","D:\\Project\\frontend\\src\\screens\\SubscriptionPlan.js":"8","D:\\Project\\frontend\\src\\screens\\LoginManager.js":"9","D:\\Project\\frontend\\src\\actions\\userActions.js":"10","D:\\Project\\frontend\\src\\components\\FormContainer.js":"11","D:\\Project\\frontend\\src\\constants\\userConstants.js":"12","D:\\Project\\frontend\\src\\components\\Message.js":"13","D:\\Project\\frontend\\src\\components\\Loader.js":"14","D:\\Project\\frontend\\src\\store.js":"15","D:\\Project\\frontend\\src\\reducers\\subReducers.js":"16","D:\\Project\\frontend\\src\\constants\\subConstants.js":"17","D:\\Project\\frontend\\src\\actions\\subActions.js":"18","D:\\Project\\frontend\\src\\reducers\\userReducer.js":"19","D:\\Project\\frontend\\src\\screens\\RegisterScreen.js":"20","D:\\Project\\frontend\\src\\components\\Payment.js":"21","D:\\Project\\frontend\\src\\screens\\PaymentScreen.js":"22","D:\\Project\\frontend\\src\\actions\\orderActions.js":"23","D:\\Project\\frontend\\src\\constants\\orderConstants.js":"24","D:\\Project\\frontend\\src\\reducers\\orderReducers.js":"25","D:\\Project\\frontend\\src\\screens\\SelectedSubscription.js":"26","D:\\Project\\frontend\\src\\components\\SubDate.js":"27","D:\\Project - Copy\\frontend\\src\\index.js":"28","D:\\Project - Copy\\frontend\\src\\store.js":"29","D:\\Project - Copy\\frontend\\src\\reportWebVitals.js":"30","D:\\Project - Copy\\frontend\\src\\App.js":"31","D:\\Project - Copy\\frontend\\src\\reducers\\subReducers.js":"32","D:\\Project - Copy\\frontend\\src\\reducers\\userReducer.js":"33","D:\\Project - Copy\\frontend\\src\\components\\Head.js":"34","D:\\Project - Copy\\frontend\\src\\reducers\\orderReducers.js":"35","D:\\Project - Copy\\frontend\\src\\screens\\Home.js":"36","D:\\Project - Copy\\frontend\\src\\screens\\SubscriptionPlan.js":"37","D:\\Project - Copy\\frontend\\src\\screens\\LoginManager.js":"38","D:\\Project - Copy\\frontend\\src\\screens\\PaymentScreen.js":"39","D:\\Project - Copy\\frontend\\src\\screens\\RegisterScreen.js":"40","D:\\Project - Copy\\frontend\\src\\screens\\SelectedSubscription.js":"41","D:\\Project - Copy\\frontend\\src\\components\\Subscription.js":"42","D:\\Project - Copy\\frontend\\src\\components\\Loader.js":"43","D:\\Project - Copy\\frontend\\src\\components\\FormContainer.js":"44","D:\\Project - Copy\\frontend\\src\\components\\Message.js":"45","D:\\Project - Copy\\frontend\\src\\constants\\userConstants.js":"46","D:\\Project - Copy\\frontend\\src\\constants\\subConstants.js":"47","D:\\Project - Copy\\frontend\\src\\constants\\orderConstants.js":"48","D:\\Project - Copy\\frontend\\src\\components\\SubDate.js":"49","D:\\Project - Copy\\frontend\\src\\actions\\userActions.js":"50","D:\\Project - Copy\\frontend\\src\\actions\\subActions.js":"51","D:\\Project - Copy\\frontend\\src\\actions\\orderActions.js":"52","D:\\Project - Copy\\frontend\\src\\screens\\BecomePro.js":"53","D:\\Project - Copy\\frontend\\src\\components\\Payment.js":"54","D:\\Project - Copy\\frontend\\src\\screens\\OrderScreen.js":"55","D:\\Project - Copy\\frontend\\src\\screens\\ProfileScreen1.js":"56"},{"size":596,"mtime":1625600070219,"results":"57","hashOfConfig":"58"},{"size":362,"mtime":499162500000,"results":"59","hashOfConfig":"58"},{"size":1053,"mtime":1625757660766,"results":"60","hashOfConfig":"58"},{"size":1768,"mtime":1625668415786,"results":"61","hashOfConfig":"58"},{"size":920,"mtime":1625668019780,"results":"62","hashOfConfig":"58"},{"size":546,"mtime":1625587269883,"results":"63","hashOfConfig":"58"},{"size":985,"mtime":1625591916184,"results":"64","hashOfConfig":"58"},{"size":3199,"mtime":1625757443300,"results":"65","hashOfConfig":"58"},{"size":2630,"mtime":1625665677928,"results":"66","hashOfConfig":"58"},{"size":2243,"mtime":1625659965231,"results":"67","hashOfConfig":"58"},{"size":392,"mtime":1625598720069,"results":"68","hashOfConfig":"58"},{"size":390,"mtime":1625659845470,"results":"69","hashOfConfig":"58"},{"size":238,"mtime":1625599399940,"results":"70","hashOfConfig":"58"},{"size":477,"mtime":1625599352946,"results":"71","hashOfConfig":"58"},{"size":1140,"mtime":1625812654389,"results":"72","hashOfConfig":"58"},{"size":1194,"mtime":1625648985290,"results":"73","hashOfConfig":"58"},{"size":318,"mtime":1625646148781,"results":"74","hashOfConfig":"58"},{"size":1310,"mtime":1625669635535,"results":"75","hashOfConfig":"58"},{"size":1174,"mtime":1625660643930,"results":"76","hashOfConfig":"58"},{"size":4036,"mtime":1625660029573,"results":"77","hashOfConfig":"58"},{"size":355,"mtime":1625670883882,"results":"78","hashOfConfig":"58"},{"size":1756,"mtime":1625811143263,"results":"79","hashOfConfig":"58"},{"size":800,"mtime":1625758226813,"results":"80","hashOfConfig":"58"},{"size":107,"mtime":1625726038231,"results":"81","hashOfConfig":"58"},{"size":484,"mtime":1625810984525,"results":"82","hashOfConfig":"58"},{"size":2514,"mtime":1625810520463,"results":"83","hashOfConfig":"58"},{"size":630,"mtime":1625809910343,"results":"84","hashOfConfig":"58"},{"size":596,"mtime":1625600070219,"results":"85","hashOfConfig":"86"},{"size":1480,"mtime":1626011133600,"results":"87","hashOfConfig":"86"},{"size":362,"mtime":499162500000,"results":"88","hashOfConfig":"86"},{"size":1396,"mtime":1626019019668,"results":"89","hashOfConfig":"86"},{"size":1194,"mtime":1625648985290,"results":"90","hashOfConfig":"86"},{"size":2451,"mtime":1626011017949,"results":"91","hashOfConfig":"86"},{"size":1940,"mtime":1626015223926,"results":"92","hashOfConfig":"86"},{"size":2746,"mtime":1625999349125,"results":"93","hashOfConfig":"86"},{"size":1381,"mtime":1626015117991,"results":"94","hashOfConfig":"86"},{"size":4665,"mtime":1626017075867,"results":"95","hashOfConfig":"86"},{"size":2659,"mtime":1625907099227,"results":"96","hashOfConfig":"86"},{"size":1974,"mtime":1626019115066,"results":"97","hashOfConfig":"86"},{"size":5684,"mtime":1626027433120,"results":"98","hashOfConfig":"86"},{"size":2841,"mtime":1626017457731,"results":"99","hashOfConfig":"86"},{"size":1379,"mtime":1626015393829,"results":"100","hashOfConfig":"86"},{"size":477,"mtime":1625599352946,"results":"101","hashOfConfig":"86"},{"size":392,"mtime":1625598720069,"results":"102","hashOfConfig":"86"},{"size":238,"mtime":1625599399940,"results":"103","hashOfConfig":"86"},{"size":910,"mtime":1626010939773,"results":"104","hashOfConfig":"86"},{"size":318,"mtime":1625646148781,"results":"105","hashOfConfig":"86"},{"size":780,"mtime":1625981899972,"results":"106","hashOfConfig":"86"},{"size":477,"mtime":1626015343539,"results":"107","hashOfConfig":"86"},{"size":4557,"mtime":1626027440735,"results":"108","hashOfConfig":"86"},{"size":1310,"mtime":1625669635535,"results":"109","hashOfConfig":"86"},{"size":4008,"mtime":1626001150409,"results":"110","hashOfConfig":"86"},{"size":2545,"mtime":1626021662757,"results":"111","hashOfConfig":"86"},{"size":355,"mtime":1625670883882,"results":"112","hashOfConfig":"86"},{"size":5240,"mtime":1626039340932,"results":"113","hashOfConfig":"86"},{"size":6984,"mtime":1626021770542,"results":"114","hashOfConfig":"86"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"1c31tjn",{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"117"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"117"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"117"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"117"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},"1u03fb0",{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"177"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"177"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"177"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"177"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"177"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"177"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"177"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"177"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"177"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"238"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"241","messages":"242","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"177"},"D:\\Project\\frontend\\src\\index.js",[],["244","245"],"D:\\Project\\frontend\\src\\reportWebVitals.js",[],"D:\\Project\\frontend\\src\\App.js",[],"D:\\Project\\frontend\\src\\components\\Head.js",["246"],"import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, Row, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\n\r\nfunction Head() {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to=\"/\">\r\n                        <Navbar.Brand>Manager App</Navbar.Brand>\r\n                    </LinkContainer>\r\n                    \r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n\r\n                            {userInfo ? (\r\n                                    <NavDropdown title={userInfo.name} id='username'>\r\n                                        <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n\r\n                                    </NavDropdown>\r\n                                ) : (\r\n                                        <LinkContainer to='/login'>\r\n                                            <Nav.Link><i className=\"fas fa-user\"></i>Login</Nav.Link>\r\n                                        </LinkContainer>\r\n                                    )}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Head\r\n","D:\\Project\\frontend\\src\\screens\\Home.js",["247","248","249"],"import React,{useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport Subscription from '../components/Subscription'\r\nimport { Row,Col } from 'react-bootstrap'\r\nimport {listSubscriptions} from '../actions/subActions'\r\n\r\n\r\n\r\nfunction Home() {\r\n    const dispatch =useDispatch()\r\n    const subList = useSelector(state => state.subList)\r\n    const {error,loading,subscriptions} = subList\r\n\r\n    useEffect(() => {\r\n        dispatch(listSubscriptions())\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Subscriptions</h1>\r\n            <Row>\r\n                {subscriptions.map(subscription => (\r\n                    <Col key={subscription._id} sm={12} md={6} xl={3}>\r\n                        <Subscription subscription={subscription} />\r\n                        \r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\Project\\frontend\\src\\subscriptions.js",[],["250","251"],"D:\\Project\\frontend\\src\\components\\Subscription.js",[],"D:\\Project\\frontend\\src\\screens\\SubscriptionPlan.js",["252","253"],"import React,{useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Row,Col,Image,ListGroup,Button,Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {listSubscriptionsDetails} from '../actions/subActions'\r\nimport Payment from '../components/Payment'\r\n\r\nconst SubscriptionPlan = ({ match,history }) => {\r\n    console.log(match)\r\n    const dispatch = useDispatch()\r\n    \r\n    const subDetails = useSelector(state => state.subDetails)\r\n    const {error,loading,subscription} = subDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listSubscriptionsDetails(match.params.id))\r\n\r\n    }, [dispatch,match])\r\n\r\n    const addToSubscribedHandler = () =>{\r\n        console.log(match.params.id)\r\n        history.push(`/selected/${match.params.id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>\r\n              Go Back\r\n            </Link>\r\n            <Row>\r\n            <Col md={5}>\r\n                    <Image \r\n                        src={subscription.image} \r\n                        alt={subscription.name} \r\n                        fluid \r\n                    />\r\n                </Col> \r\n\r\n                <Col md={3}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>{subscription.name}</h3>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>{subscription.duration} days</h3>\r\n                        </ListGroup.Item>\r\n                        \r\n                        <ListGroup.Item>\r\n                            Price: Rs. <Payment price={subscription.price} />\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Description: {subscription.description}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            Features: {subscription.features}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={2}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Price:</Col>\r\n                                    <Col>\r\n                                        <strong>  Rs.{subscription.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                onClick={addToSubscribedHandler}\r\n                                className='btn-block' \r\n                                type='button'>\r\n                                Subscribe Plan\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n\r\n                    </Card>\r\n                </Col>\r\n\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SubscriptionPlan\r\n\r\n","D:\\Project\\frontend\\src\\screens\\LoginManager.js",[],"D:\\Project\\frontend\\src\\actions\\userActions.js",[],"D:\\Project\\frontend\\src\\components\\FormContainer.js",[],"D:\\Project\\frontend\\src\\constants\\userConstants.js",[],"D:\\Project\\frontend\\src\\components\\Message.js",[],"D:\\Project\\frontend\\src\\components\\Loader.js",[],"D:\\Project\\frontend\\src\\store.js",[],"D:\\Project\\frontend\\src\\reducers\\subReducers.js",[],"D:\\Project\\frontend\\src\\constants\\subConstants.js",[],"D:\\Project\\frontend\\src\\actions\\subActions.js",[],"D:\\Project\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Project\\frontend\\src\\screens\\RegisterScreen.js",["254"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","D:\\Project\\frontend\\src\\components\\Payment.js",[],"D:\\Project\\frontend\\src\\screens\\PaymentScreen.js",["255","256","257","258"],"D:\\Project\\frontend\\src\\actions\\orderActions.js",[],"D:\\Project\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Project\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Project\\frontend\\src\\screens\\SelectedSubscription.js",["259"],"D:\\Project\\frontend\\src\\components\\SubDate.js",[],"D:\\Project - Copy\\frontend\\src\\index.js",[],["260","261"],"D:\\Project - Copy\\frontend\\src\\store.js",[],"D:\\Project - Copy\\frontend\\src\\reportWebVitals.js",[],"D:\\Project - Copy\\frontend\\src\\App.js",[],"D:\\Project - Copy\\frontend\\src\\reducers\\subReducers.js",[],"D:\\Project - Copy\\frontend\\src\\reducers\\userReducer.js",[],"D:\\Project - Copy\\frontend\\src\\components\\Head.js",[],"D:\\Project - Copy\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Project - Copy\\frontend\\src\\screens\\Home.js",["262"],"import React,{useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Row,Col } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Subscription from '../components/Subscription'\r\nimport {listSubscriptions} from '../actions/subActions'\r\n\r\n\r\n\r\nfunction Home() {\r\n    const dispatch =useDispatch()\r\n    const subList = useSelector(state => state.subList)\r\n    const {error,loading,subscriptions} = subList\r\n\r\n    useEffect(() => {\r\n        dispatch(listSubscriptions())\r\n\r\n    }, [])\r\n\r\n    return (\r\n            <div>\r\n                {loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        :<div>\r\n                            <h1>Subscriptions</h1>\r\n                            <Row>\r\n                                {subscriptions.map(subscription => (\r\n                                    <Col key={subscription._id} sm={12} md={6} xl={3}>\r\n                                        <Subscription subscription={subscription} />\r\n                                        \r\n                                    </Col>\r\n                                ))}\r\n                            </Row>\r\n                        </div>                   \r\n                }\r\n            </div>     \r\n    )\r\n}\r\n\r\nexport default Home\r\n","D:\\Project - Copy\\frontend\\src\\screens\\SubscriptionPlan.js",["263","264"],"import React,{useEffect} from 'react'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport { Row,Col,Image,ListGroup,Button,Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {listSubscriptionsDetails} from '../actions/subActions'\r\n\r\n\r\nconst SubscriptionPlan = ({ match,history }) => {\r\n    console.log(match)\r\n    const dispatch = useDispatch()\r\n    \r\n    const subDetails = useSelector(state => state.subDetails)\r\n    const {error,loading,subscription} = subDetails\r\n\r\n    useEffect(() => {\r\n        dispatch(listSubscriptionsDetails(match.params.id))\r\n\r\n    }, [dispatch,match])\r\n\r\n    const addToSubscribedHandler = () =>{\r\n        console.log(match.params.id)\r\n        history.push(`/selected/${match.params.id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>\r\n              Home\r\n            </Link>\r\n            {loading ?\r\n                <Loader />\r\n                : error\r\n                    ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Row>\r\n                            <Col md={5}>\r\n                                <Image \r\n                                    src={subscription.image} \r\n                                    alt={subscription.name} \r\n                                    fluid \r\n                                />\r\n                            </Col> \r\n                \r\n                            <Col md={3}>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h3>{subscription.name}</h3>\r\n                                    </ListGroup.Item>\r\n            \r\n                                    {subscription.name =='Free'?(\r\n                                        <ListGroup.Item>\r\n                                            <h3>Unlimited Duration</h3>\r\n                                        </ListGroup.Item>                                     \r\n                                    ) : (                       \r\n                                        <ListGroup.Item>\r\n                                            <h3>{subscription.duration} days</h3>\r\n                                        </ListGroup.Item>                       \r\n                                    )}\r\n                                \r\n                                    <ListGroup.Item>\r\n                                        Price: ₹ {subscription.price}\r\n                                    </ListGroup.Item>\r\n            \r\n                                    <ListGroup.Item>\r\n                                        Description: {subscription.description}\r\n                                    </ListGroup.Item>\r\n            \r\n                                    <ListGroup.Item>\r\n                                        Features: {subscription.features}\r\n                                    </ListGroup.Item>\r\n                                </ListGroup>\r\n                            </Col>\r\n            \r\n                            <Col md={2}>\r\n                                <Card>\r\n                                    <ListGroup variant='flush'>\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Price:</Col>\r\n                                                <Col>\r\n                                                    <strong>₹{subscription.price}</strong>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    </ListGroup>\r\n            \r\n                                    <ListGroup.Item>\r\n                                        <Button \r\n                                            onClick={addToSubscribedHandler}\r\n                                            disabled={subscription.name =='Free'}\r\n                                            className='btn-block' \r\n                                            type='button'>\r\n                                            Subscribe Plan\r\n                                        </Button>\r\n                                    </ListGroup.Item>\r\n            \r\n                                </Card>\r\n                            </Col>               \r\n                        </Row>\r\n                )}\r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SubscriptionPlan\r\n\r\n","D:\\Project - Copy\\frontend\\src\\screens\\LoginManager.js",[],"D:\\Project - Copy\\frontend\\src\\screens\\PaymentScreen.js",["265"],"import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {savePaymentMethod} from '../actions/orderActions'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n    \r\n    const selectedSub = useSelector(state => state.selectedSub)\r\n    const {subItem}  = selectedSub\r\n    \r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>\r\n                Home\r\n            </Link>\r\n            <FormContainer>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group>\r\n                        <Form.Label as='legend'>Select Method</Form.Label>\r\n                            <Col>\r\n                                <Form.Check\r\n                                    type='radio'\r\n                                    label='PayPal   or  Credit Card'\r\n                                    id='paypal'\r\n                                    name='paymentMethod'\r\n                                    checked\r\n                                    onChange={(e) => setPaymentMethod(e.target.value)}\r\n                                >\r\n                                </Form.Check>\r\n                            </Col>\r\n                    </Form.Group>\r\n                    <Button \r\n                        type='submit' \r\n                        variant='primary'\r\n                    >\r\n                        Continue\r\n                    </Button>                 \r\n                </Form>\r\n            </FormContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","D:\\Project - Copy\\frontend\\src\\screens\\RegisterScreen.js",["266","267","268","269","270","271","272"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nfunction RegisterScreen({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n    const [address, setAddress] = useState('')\r\n    const [dob, setDob] = useState('')\r\n    const [company, setCompany] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { error, loading, userInfo } = userRegister\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='name'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter Email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter Password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                {/* <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                        required\r\n                        type='password'\r\n                        placeholder='Confirm Password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    >\r\n                    </Form.Control>\r\n                </Form.Group> */}\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account? <Link\r\n                        to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Sign In\r\n                        </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","D:\\Project - Copy\\frontend\\src\\screens\\SelectedSubscription.js",[],"D:\\Project - Copy\\frontend\\src\\components\\Subscription.js",["273"],"import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Subscription({ subscription }) {\r\n\r\n    return (\r\n        <Card className=\"my-3 p-3 rounded\">\r\n            <Link to={`/subscription/${subscription._id}`}>\r\n                <Card.Img src={subscription.image} />\r\n            </Link>\r\n        \r\n            <Card.Body>\r\n                <Link to={`/subscription/${subscription._id}`}>\r\n                    <Card.Title>\r\n                        <h3>\r\n                            <strong>{subscription.name}</strong>\r\n                        </h3>\r\n                    </Card.Title>\r\n                </Link>\r\n\r\n                    {subscription.name =='Free'?(                   \r\n                            <Card.Text as=\"h4\">\r\n                                Unlimited Duration <br/>\r\n                                ₹ {subscription.price}                                   \r\n                            </Card.Text>\r\n                        ):(\r\n                            <Card.Text as=\"h4\">\r\n                                {subscription.duration} days <br/>\r\n                                ₹ {subscription.price}                                   \r\n                            </Card.Text>\r\n                        )}\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Subscription\r\n","D:\\Project - Copy\\frontend\\src\\components\\Loader.js",[],"D:\\Project - Copy\\frontend\\src\\components\\FormContainer.js",[],"D:\\Project - Copy\\frontend\\src\\components\\Message.js",[],"D:\\Project - Copy\\frontend\\src\\constants\\userConstants.js",[],"D:\\Project - Copy\\frontend\\src\\constants\\subConstants.js",[],"D:\\Project - Copy\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Project - Copy\\frontend\\src\\components\\SubDate.js",[],"D:\\Project - Copy\\frontend\\src\\actions\\userActions.js",["274"],"import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_RESET,\r\n} from '../constants/userConstants'\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login/',\r\n            { 'email': email, 'password': password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n}\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/register/',\r\n            { 'name': name, \r\n            'email': email, \r\n            'password': password},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/users/profile/update/`,\r\n            user,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n","D:\\Project - Copy\\frontend\\src\\actions\\subActions.js",[],"D:\\Project - Copy\\frontend\\src\\actions\\orderActions.js",["275"],"import axios from 'axios'\r\nimport {\r\n    ADD_SUBSCRIPTION,\r\n    SAVE_PAYMENT_METHOD,\r\n    CLEAR_SUB_ITEM,\r\n\r\n    ORDER_CREATE_REQUEST,\r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL ,\r\n    ORDER_PAY_RESET,\r\n} from '../constants/orderConstants'\r\n\r\n\r\nexport const addOrder = (id) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/subscriptions/${id}`)\r\n\r\n\r\n    dispatch({\r\n        type: ADD_SUBSCRIPTION,\r\n        payload: {\r\n            subscription: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            \r\n        }\r\n    })\r\n    localStorage.setItem('subItem', JSON.stringify(getState().selectedSub.subItem))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\nexport const createOrder = (subname,paymentMethod) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/orders/add/`,\r\n            {'plan':subname,'pm':paymentMethod},\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CLEAR_SUB_ITEM,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.removeItem('SubItem')\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserSubscription = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/orders/${id}/`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const payOrder = (id,paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(\r\n            `/api/orders/${id}/pay/`,\r\n            paymentResult,\r\n            config \r\n        )\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.detail\r\n                ? error.response.data.detail\r\n                : error.message,\r\n        })\r\n    }\r\n}","D:\\Project - Copy\\frontend\\src\\screens\\BecomePro.js",["276","277","278"],"import React, { useEffect,useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row,Form,Button } from 'react-bootstrap'\r\nimport { createOrder, getUserSubscription } from '../actions/orderActions'\r\nimport Message from '../components/Message'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction BecomePro({history}) {\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, error, success } = orderCreate\r\n\r\n\r\n    const selectedSub = useSelector(state => state.selectedSub)\r\n    const {subItem,paymentMethod}  = selectedSub\r\n    const subname=subItem.name\r\n\r\n    if (!selectedSub.paymentMethod) {\r\n        history.push('/payment')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/order/${order._id}`)\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () =>{\r\n        dispatch(createOrder(subname,paymentMethod))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/' className='btn btn-light my-3'>\r\n              Home\r\n            </Link>\r\n            <h1> Why Become Pro ? </h1>\r\n            <p>Member Splash provides all key membership management functionality for your swim club. \r\n                Our system will save you time, save you money and ensure your club captures the revenues it deserves.\r\n                Member Splash is the only membership platform that is built specifically for swim clubs.  \r\n                We understand and support the unique pricing structures, account types and club rules you work with.\r\n                swim clubs in over 20 states choose Member Splash to manage their club memberships</p>\r\n            <Row>\r\n                <Form method=\"post\">\r\n                    <label>Membership Type</label>\r\n                    <br/>\r\n                    <Button\r\n                        type='button'\r\n                        className='btn-block'\r\n                        onClick= {placeOrder}\r\n                    >\r\n                        Pay ₹ {subItem.price}\r\n                    </Button>\r\n                    {message && <Message variant='danger'>{message}</Message>}\r\n                    {error && <Message variant='danger'>{error}</Message>}\r\n                    \r\n                </Form>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BecomePro\r\n\r\n","D:\\Project - Copy\\frontend\\src\\components\\Payment.js",[],["279","280"],"D:\\Project - Copy\\frontend\\src\\screens\\OrderScreen.js",["281","282","283"],"D:\\Project - Copy\\frontend\\src\\screens\\ProfileScreen1.js",["284","285","286","287","288"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n// import { listMyOrders } from '../actions/orderActions'\r\n\r\nfunction ProfileScreen({ history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { error, loading, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    // const orderListMy = useSelector(state => state.orderListMy)\r\n    // const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        } else {\r\n            if (!user || !user.name || success || userInfo._id !== user._id) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                // dispatch(getUserDetails('profile/'))\r\n                // dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (password != confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n            setMessage('')\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Update User Profile</h2>\r\n\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='name'\r\n                            placeholder='Enter name'\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                            required\r\n                            type='email'\r\n                            placeholder='Enter Email'\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Enter Password'\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n\r\n                            type='password'\r\n                            placeholder='Confirm Password'\r\n                            value={confirmPassword}\r\n                            onChange={(e) => setConfirmPassword(e.target.value)}\r\n                        >\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>\r\n                        Update\r\n                </Button>\r\n\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Subscription</h2>\r\n                {/* {loadingOrders ? (\r\n                    <Loader />\r\n                ) : errorOrders ? (\r\n                    <Message variant='danger'>{errorOrders}</Message>\r\n                ) : (\r\n                            <Table striped responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>Date</th>\r\n                                        <th>Total</th>\r\n                                        <th>Paid</th>\r\n                                        <th>Delivered</th>\r\n                                        <th></th>\r\n                                    </tr>\r\n                                </thead>\r\n\r\n                                <tbody>\r\n                                    {orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                                            <td>${order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0, 10) : (\r\n                                                <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                            )}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button className='btn-sm'>Details</Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )} */}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen",{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":3,"column":34,"nodeType":"295","messageId":"296","endLine":3,"endColumn":37},{"ruleId":"293","severity":1,"message":"297","line":12,"column":12,"nodeType":"295","messageId":"296","endLine":12,"endColumn":17},{"ruleId":"293","severity":1,"message":"298","line":12,"column":18,"nodeType":"295","messageId":"296","endLine":12,"endColumn":25},{"ruleId":"299","severity":1,"message":"300","line":17,"column":8,"nodeType":"301","endLine":17,"endColumn":10,"suggestions":"302"},{"ruleId":"289","replacedBy":"303"},{"ruleId":"291","replacedBy":"304"},{"ruleId":"293","severity":1,"message":"297","line":13,"column":12,"nodeType":"295","messageId":"296","endLine":13,"endColumn":17},{"ruleId":"293","severity":1,"message":"298","line":13,"column":18,"nodeType":"295","messageId":"296","endLine":13,"endColumn":25},{"ruleId":"305","severity":1,"message":"306","line":34,"column":22,"nodeType":"307","messageId":"308","endLine":34,"endColumn":24},{"ruleId":"293","severity":1,"message":"309","line":1,"column":27,"nodeType":"295","messageId":"296","endLine":1,"endColumn":36},{"ruleId":"293","severity":1,"message":"310","line":2,"column":10,"nodeType":"295","messageId":"296","endLine":2,"endColumn":19},{"ruleId":"293","severity":1,"message":"311","line":5,"column":8,"nodeType":"295","messageId":"296","endLine":5,"endColumn":15},{"ruleId":"293","severity":1,"message":"312","line":11,"column":12,"nodeType":"295","messageId":"296","endLine":11,"endColumn":19},{"ruleId":"293","severity":1,"message":"313","line":4,"column":38,"nodeType":"295","messageId":"296","endLine":4,"endColumn":42},{"ruleId":"289","replacedBy":"314"},{"ruleId":"291","replacedBy":"315"},{"ruleId":"299","severity":1,"message":"300","line":19,"column":8,"nodeType":"301","endLine":19,"endColumn":10,"suggestions":"316"},{"ruleId":"305","severity":1,"message":"317","line":52,"column":56,"nodeType":"307","messageId":"308","endLine":52,"endColumn":58},{"ruleId":"305","severity":1,"message":"317","line":92,"column":73,"nodeType":"307","messageId":"308","endLine":92,"endColumn":75},{"ruleId":"293","severity":1,"message":"312","line":11,"column":12,"nodeType":"295","messageId":"296","endLine":11,"endColumn":19},{"ruleId":"293","severity":1,"message":"318","line":17,"column":12,"nodeType":"295","messageId":"296","endLine":17,"endColumn":19},{"ruleId":"293","severity":1,"message":"319","line":17,"column":21,"nodeType":"295","messageId":"296","endLine":17,"endColumn":31},{"ruleId":"293","severity":1,"message":"320","line":18,"column":12,"nodeType":"295","messageId":"296","endLine":18,"endColumn":15},{"ruleId":"293","severity":1,"message":"321","line":18,"column":17,"nodeType":"295","messageId":"296","endLine":18,"endColumn":23},{"ruleId":"293","severity":1,"message":"322","line":19,"column":12,"nodeType":"295","messageId":"296","endLine":19,"endColumn":19},{"ruleId":"293","severity":1,"message":"323","line":19,"column":21,"nodeType":"295","messageId":"296","endLine":19,"endColumn":31},{"ruleId":"305","severity":1,"message":"306","line":37,"column":22,"nodeType":"307","messageId":"308","endLine":37,"endColumn":24},{"ruleId":"305","severity":1,"message":"317","line":22,"column":40,"nodeType":"307","messageId":"308","endLine":22,"endColumn":42},{"ruleId":"293","severity":1,"message":"324","line":19,"column":5,"nodeType":"295","messageId":"296","endLine":19,"endColumn":30},{"ruleId":"293","severity":1,"message":"325","line":18,"column":5,"nodeType":"295","messageId":"296","endLine":18,"endColumn":20},{"ruleId":"293","severity":1,"message":"326","line":5,"column":23,"nodeType":"295","messageId":"296","endLine":5,"endColumn":42},{"ruleId":"293","severity":1,"message":"327","line":10,"column":21,"nodeType":"295","messageId":"296","endLine":10,"endColumn":31},{"ruleId":"299","severity":1,"message":"328","line":31,"column":8,"nodeType":"301","endLine":31,"endColumn":26,"suggestions":"329"},{"ruleId":"289","replacedBy":"330"},{"ruleId":"291","replacedBy":"331"},{"ruleId":"293","severity":1,"message":"332","line":22,"column":60,"nodeType":"295","messageId":"296","endLine":22,"endColumn":68},{"ruleId":"333","severity":1,"message":"334","line":28,"column":23,"nodeType":"335","messageId":"336","endLine":28,"endColumn":34},{"ruleId":"299","severity":1,"message":"337","line":59,"column":8,"nodeType":"301","endLine":59,"endColumn":46,"suggestions":"338"},{"ruleId":"293","severity":1,"message":"339","line":2,"column":10,"nodeType":"295","messageId":"296","endLine":2,"endColumn":14},{"ruleId":"293","severity":1,"message":"340","line":3,"column":34,"nodeType":"295","messageId":"296","endLine":3,"endColumn":39},{"ruleId":"293","severity":1,"message":"341","line":4,"column":10,"nodeType":"295","messageId":"296","endLine":4,"endColumn":23},{"ruleId":"293","severity":1,"message":"342","line":8,"column":10,"nodeType":"295","messageId":"296","endLine":8,"endColumn":24},{"ruleId":"305","severity":1,"message":"306","line":53,"column":22,"nodeType":"307","messageId":"308","endLine":53,"endColumn":24},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["345"],["343"],["344"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'ListGroup' is defined but never used.","'Payment' is defined but never used.","'subItem' is assigned a value but never used.","'Form' is defined but never used.",["343"],["344"],["346"],"Expected '===' and instead saw '=='.","'address' is assigned a value but never used.","'setAddress' is assigned a value but never used.","'dob' is assigned a value but never used.","'setDob' is assigned a value but never used.","'company' is assigned a value but never used.","'setCompany' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","'ORDER_PAY_RESET' is defined but never used.","'getUserSubscription' is defined but never used.","'setMessage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.",["347"],["343"],["344"],"'errorPay' is assigned a value but never used.","no-self-assign","'order.price' is assigned to itself.","MemberExpression","selfAssignment","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["348"],"'Link' is defined but never used.","'Table' is defined but never used.","'LinkContainer' is defined but never used.","'getUserDetails' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"349","fix":"350"},{"desc":"349","fix":"351"},{"desc":"352","fix":"353"},{"desc":"354","fix":"355"},"Update the dependencies array to be: [dispatch]",{"range":"356","text":"357"},{"range":"358","text":"357"},"Update the dependencies array to be: [success, history, order._id, dispatch]",{"range":"359","text":"360"},"Update the dependencies array to be: [dispatch, history, order, orderId, successPay, userInfo]",{"range":"361","text":"362"},[489,491],"[dispatch]",[577,579],[1026,1044],"[success, history, order._id, dispatch]",[2046,2084],"[dispatch, history, order, orderId, successPay, userInfo]"]